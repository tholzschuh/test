<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tim Holzschuh</title><link>https://tholzschuh.github.io/test/</link><description>Recent content on Tim Holzschuh</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 06 Jul 2022 17:07:00 +0200</lastBuildDate><atom:link href="https://tholzschuh.github.io/test/index.xml" rel="self" type="application/rss+xml"/><item><title>Theme Documentation - Basics</title><link>https://tholzschuh.github.io/test/posts/theme-documentation-basics/</link><pubDate>Fri, 06 Mar 2020 21:29:01 +0800</pubDate><guid>https://tholzschuh.github.io/test/posts/theme-documentation-basics/</guid><description>Gokarna is an opinionated theme with a focus on minimalism and simplicity.
Installation The following steps are here to help you initialize your new website. If you don’t know Hugo at all, we strongly suggest you learn more about it by following this great documentation for beginners.
a. Create Your Project Hugo provides a new command to create a new website:
hugo new site my_website cd my_website b. Install the Theme The theme’s repository is: https://github.</description></item><item><title>Theme Documentation - Advanced</title><link>https://tholzschuh.github.io/test/posts/theme-documentation-advanced/</link><pubDate>Wed, 06 May 2020 21:29:01 +0800</pubDate><guid>https://tholzschuh.github.io/test/posts/theme-documentation-advanced/</guid><description>Gokarna is an opinionated theme with a focus on minimalism and simplicity.
Content Types This theme supports two types of content types: post and page. To specify them, you need to add them in your markdown metadata.
Post This is the default blog post type which will be shown in your &amp;ldquo;Posts&amp;rdquo; section and who&amp;rsquo;s tags will be indexed. Basically, a normal blog post.
--- title: &amp;#34;Hello, world!&amp;#34; date: 2021-01-01 description: &amp;#34;A blog post&amp;#34; image: &amp;#34;/path/to/image.</description></item><item><title>Markdown Syntax Guide</title><link>https://tholzschuh.github.io/test/posts/markdown-syntax/</link><pubDate>Wed, 19 Jun 2019 00:00:00 +0000</pubDate><guid>https://tholzschuh.github.io/test/posts/markdown-syntax/</guid><description>&lt;p>This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p></description></item><item><title>Emoji Support</title><link>https://tholzschuh.github.io/test/posts/emoji-support/</link><pubDate>Thu, 01 Oct 2020 17:55:28 +0800</pubDate><guid>https://tholzschuh.github.io/test/posts/emoji-support/</guid><description>Emoji can be enabled in a Hugo project in a number of ways.
The emojify function can be called directly in templates or Inline Shortcodes.
To enable emoji globally, set enableEmoji to true in your site configuration and then you can type emoji shorthand codes directly in content files.
These begin and end with a colon and include the code of an emoji:
Gone camping! {?:}tent: Be back soon. That is so funny!</description></item><item><title/><link>https://tholzschuh.github.io/test/posts/maths/</link><pubDate>Wed, 06 Jul 2022 17:07:00 +0200</pubDate><guid>https://tholzschuh.github.io/test/posts/maths/</guid><description>notes An étale homotopy-theoretic reformulation of the Section Conjecture, Septemer 1, 2021
Computing simple factors of certain Jacobian varieties over finite fields, September 1, 2019</description></item><item><title>Declarative and Reproducible System and User User Management With Nixos</title><link>https://tholzschuh.github.io/test/posts/declarative-and-reproducible-system-and-user-user-management-with-nixos/</link><pubDate>Wed, 14 Jul 2021 18:15:26 +0200</pubDate><guid>https://tholzschuh.github.io/test/posts/declarative-and-reproducible-system-and-user-user-management-with-nixos/</guid><description>I&amp;rsquo;ve been using NixOS as my main operating system for quite some time now.
As I recently upgraded my computer equipment by acquiring a new laptop, I decided that it&amp;rsquo;s time to invest some more time into further capitalizing on the feature of NixOS. The main purpose of this post is to collect all the things I learned while doing so in a single place so that I&amp;rsquo;ll always be able to look it up again if need be.</description></item><item><title>Lorem Ipsum</title><link>https://tholzschuh.github.io/test/posts/lorem-ipsum/</link><pubDate>Thu, 15 Apr 2021 23:39:49 +0530</pubDate><guid>https://tholzschuh.github.io/test/posts/lorem-ipsum/</guid><description>Heading 1 &amp;ldquo;Lorem ipsum dolor sit amet, consectetaur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</description></item><item><title>Using Latex With Hakyll</title><link>https://tholzschuh.github.io/test/posts/using-latex-with-hakyll/</link><pubDate>Tue, 12 Jan 2021 18:13:04 +0200</pubDate><guid>https://tholzschuh.github.io/test/posts/using-latex-with-hakyll/</guid><description>Since Hakyll is tightly integrated with Pandoc, it&amp;rsquo;s easy to use LaTeX with Hakyll by enabling Pandoc&amp;rsquo;s LaTeX compile features. Most explanations I found online, like this one, seem to be quite outdated though and they don&amp;rsquo;t work verbatim.
The basic idea still is to set up a custom pandoc compiler using the
pandocCompilerWith :: ReaderOptions -&amp;gt; WriterOptions -&amp;gt; Compiler (Item String) function, but the internals used in the WriterOptions have changed.</description></item><item><title>Blüdhaven</title><link>https://tholzschuh.github.io/test/projects/bludhaven/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tholzschuh.github.io/test/projects/bludhaven/</guid><description>History Blüdhaven was a former whaling town, which was officially incorporated as a &amp;ldquo;Commonwealth&amp;rdquo; in 1912. The town had a generally poor socio-economic populace, owing in part to failed efforts to transform itself into a manufacturing and shipping center.</description></item><item><title>Hydra</title><link>https://tholzschuh.github.io/test/projects/hydra/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tholzschuh.github.io/test/projects/hydra/</guid><description>Motto Cut off one head and two will take their place</description></item><item><title>Tatooine</title><link>https://tholzschuh.github.io/test/projects/tatooine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tholzschuh.github.io/test/projects/tatooine/</guid><description>A long time ago in a galaxy far, far away&amp;hellip;. A project was planned, but never completed</description></item></channel></rss>