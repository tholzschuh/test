<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Haskell on Tim Holzschuh</title><link>https://tholzschuh.github.io/tags/haskell/</link><description>Recent content in Haskell on Tim Holzschuh</description><generator>Hugo</generator><language>en</language><lastBuildDate>Tue, 12 Jan 2021 18:13:04 +0200</lastBuildDate><atom:link href="https://tholzschuh.github.io/tags/haskell/index.xml" rel="self" type="application/rss+xml"/><item><title>Using LaTeX with Hakyll</title><link>https://tholzschuh.github.io/posts/using-latex-with-hakyll/</link><pubDate>Tue, 12 Jan 2021 18:13:04 +0200</pubDate><guid>https://tholzschuh.github.io/posts/using-latex-with-hakyll/</guid><description>&lt;p>Since &lt;a href="https://jaspervdj.be/hakyll/">Hakyll&lt;/a> is tightly integrated with &lt;a href="https://pandoc.org/">Pandoc&lt;/a>, it&amp;rsquo;s easy to use LaTeX with Hakyll by enabling Pandoc&amp;rsquo;s LaTeX compile features.
Most explanations I found online, like &lt;a href="http://travis.athougies.net/posts/2013-08-13-using-math-on-your-hakyll-blog.html">this&lt;/a> one, seem to be quite outdated though and they don&amp;rsquo;t work verbatim.&lt;/p>
&lt;p>The basic idea still is to set up a custom pandoc compiler using the&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-haskell" data-lang="haskell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">pandocCompilerWith&lt;/span> &lt;span style="color:#f92672">::&lt;/span> &lt;span style="color:#66d9ef">ReaderOptions&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">WriterOptions&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">Compiler&lt;/span> (&lt;span style="color:#66d9ef">Item&lt;/span> &lt;span style="color:#66d9ef">String&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>function, but the internals used in the &lt;code>WriterOptions&lt;/code> have changed.
Specifically, enabling several extensions at once is no longer passed around as a &lt;code>Set Extension&lt;/code>. Instead, there is a new data type &lt;code>Extensions&lt;/code> introduced to handle several Extensions at once.&lt;/p></description></item></channel></rss>